{
  "api/CG.Blue.BlueApi.html": {
    "href": "api/CG.Blue.BlueApi.html",
    "title": "Class BlueApi",
    "keywords": "Class BlueApi This class is a default implementation of the IBlueApi interface. Inheritance System.Object BlueApi Implements IBlueApi Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue Assembly : CG.Blue.dll Syntax class BlueApi : IBlueApi Constructors BlueApi(ISupportFacade) This constructor creates a new instance of the BlueApi class. Declaration public BlueApi(ISupportFacade supportFacade) Parameters Type Name Description ISupportFacade supportFacade The support wrapper to use with this API. Fields _supportFacade This field contains the support wrapper for this api. Declaration protected readonly ISupportFacade _supportFacade Field Value Type Description ISupportFacade Properties Support Declaration public virtual ISupportFacade Support { get; } Property Value Type Description ISupportFacade Implements IBlueApi"
  },
  "api/CG.Blue.Data.BlueDbContext.html": {
    "href": "api/CG.Blue.Data.BlueDbContext.html",
    "title": "Class BlueDbContext",
    "keywords": "Class BlueDbContext This class is a data-context for the CG.Blue microservice. Inheritance System.Object BlueDbContext Namespace : CG.Blue.Data Assembly : CG.Blue.Data.dll Syntax public class BlueDbContext : DbContext Constructors BlueDbContext(DbContextOptions<BlueDbContext>) This constructor creates a new instance of the BlueDbContext class. Declaration public BlueDbContext(DbContextOptions<BlueDbContext> options) Parameters Type Name Description DbContextOptions < BlueDbContext > options The options to use with this data-context. Properties FileTypes This property contains the collection of file types. Declaration public virtual DbSet<FileTypeEntity> FileTypes { get; set; } Property Value Type Description DbSet < FileTypeEntity > MimeTypes This property contains the collection of MIME types. Declaration public virtual DbSet<MimeTypeEntity> MimeTypes { get; set; } Property Value Type Description DbSet < MimeTypeEntity > Methods OnModelCreating(ModelBuilder) This method is called to create the data model. Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The builder to use for the operation."
  },
  "api/CG.Blue.Data.Entities.FileTypeEntity.html": {
    "href": "api/CG.Blue.Data.Entities.FileTypeEntity.html",
    "title": "Class FileTypeEntity",
    "keywords": "Class FileTypeEntity This class is an entity that represents a file type. Inheritance System.Object FileTypeEntity Namespace : CG.Blue.Data.Entities Assembly : CG.Blue.Data.dll Syntax public class FileTypeEntity : AuditedEntityBase Properties Extension This property contains the extension for the entity. Declaration public string Extension { get; set; } Property Value Type Description System.String Id This property contains the unique identifier for the entity. Declaration public int Id { get; set; } Property Value Type Description System.Int32 MimeType This property contains the associated MIME type entity. Declaration public virtual MimeTypeEntity MimeType { get; set; } Property Value Type Description MimeTypeEntity MimeTypeId This property contains the identifier for the associated MIME type entity. Declaration public int? MimeTypeId { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/CG.Blue.Data.Entities.html": {
    "href": "api/CG.Blue.Data.Entities.html",
    "title": "Namespace CG.Blue.Data.Entities",
    "keywords": "Namespace CG.Blue.Data.Entities Classes FileTypeEntity This class is an entity that represents a file type. MimeTypeEntity This class is an entity that represents a Multipurpose Internet Mail Extension (MIME) type."
  },
  "api/CG.Blue.Data.Entities.MimeTypeEntity.html": {
    "href": "api/CG.Blue.Data.Entities.MimeTypeEntity.html",
    "title": "Class MimeTypeEntity",
    "keywords": "Class MimeTypeEntity This class is an entity that represents a Multipurpose Internet Mail Extension (MIME) type. Inheritance System.Object MimeTypeEntity Namespace : CG.Blue.Data.Entities Assembly : CG.Blue.Data.dll Syntax public class MimeTypeEntity : AuditedEntityBase Properties FileTypes This property contains the associated file type entities. Declaration public virtual ICollection<FileTypeEntity> FileTypes { get; set; } Property Value Type Description ICollection < FileTypeEntity > Id This property contains the unique identifier for the MIME type. Declaration public int Id { get; set; } Property Value Type Description System.Int32 SubType This property contains the sub-type for the entity. Declaration public string SubType { get; set; } Property Value Type Description System.String Type This property contains the type for the entity. Declaration public string Type { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Blue.Data.html": {
    "href": "api/CG.Blue.Data.html",
    "title": "Namespace CG.Blue.Data",
    "keywords": "Namespace CG.Blue.Data Classes BlueDbContext This class is a data-context for the CG.Blue microservice."
  },
  "api/CG.Blue.Data.InMemory.Factories.BlueDbContextDesignTimeFactory.html": {
    "href": "api/CG.Blue.Data.InMemory.Factories.BlueDbContextDesignTimeFactory.html",
    "title": "Class BlueDbContextDesignTimeFactory",
    "keywords": "Class BlueDbContextDesignTimeFactory This class is an in-memory design time factory for the BlueDbContext data-context type. Inheritance System.Object BlueDbContextDesignTimeFactory Namespace : CG.Blue.Data.InMemory.Factories Assembly : CG.Blue.Data.InMemory.dll Syntax class BlueDbContextDesignTimeFactory : DesignTimeDbContextFactory<BlueDbContext> Methods OnConfigureDataContextOptions(DbContextOptionsBuilder<BlueDbContext>, IConfiguration) This method is overridden in order to configure the options for an in-memory data-context instance. Declaration protected override void OnConfigureDataContextOptions(DbContextOptionsBuilder<BlueDbContext> optionsBuilder, IConfiguration configuration) Parameters Type Name Description DbContextOptionsBuilder < BlueDbContext > optionsBuilder The data-context options builder to use for the operation. IConfiguration configuration The configuration to use for the operation."
  },
  "api/CG.Blue.Data.InMemory.Factories.html": {
    "href": "api/CG.Blue.Data.InMemory.Factories.html",
    "title": "Namespace CG.Blue.Data.InMemory.Factories",
    "keywords": "Namespace CG.Blue.Data.InMemory.Factories Classes BlueDbContextDesignTimeFactory This class is an in-memory design time factory for the BlueDbContext data-context type."
  },
  "api/CG.Blue.Data.Maps.FileTypeEntityMap.html": {
    "href": "api/CG.Blue.Data.Maps.FileTypeEntityMap.html",
    "title": "Class FileTypeEntityMap",
    "keywords": "Class FileTypeEntityMap This class is an EFCore configuration map for the entity type. Inheritance System.Object FileTypeEntityMap Namespace : CG.Blue.Data.Maps Assembly : CG.Blue.Data.dll Syntax class FileTypeEntityMap : AuditedEntityMapBase<FileTypeEntity> Constructors FileTypeEntityMap(ModelBuilder) This constructor creates a new instance of the FileTypeEntityMap class. Declaration public FileTypeEntityMap(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The model builder to use with this map. Methods Configure(EntityTypeBuilder<FileTypeEntity>) This method configures the entity. Declaration public override void Configure(EntityTypeBuilder<FileTypeEntity> builder) Parameters Type Name Description EntityTypeBuilder < FileTypeEntity > builder The builder to use for the operation."
  },
  "api/CG.Blue.Data.Maps.html": {
    "href": "api/CG.Blue.Data.Maps.html",
    "title": "Namespace CG.Blue.Data.Maps",
    "keywords": "Namespace CG.Blue.Data.Maps Classes FileTypeEntityMap This class is an EFCore configuration map for the entity type. MimeTypeEntityMap This class is an EFCore configuration map for the entity type."
  },
  "api/CG.Blue.Data.Maps.MimeTypeEntityMap.html": {
    "href": "api/CG.Blue.Data.Maps.MimeTypeEntityMap.html",
    "title": "Class MimeTypeEntityMap",
    "keywords": "Class MimeTypeEntityMap This class is an EFCore configuration map for the entity type. Inheritance System.Object MimeTypeEntityMap Namespace : CG.Blue.Data.Maps Assembly : CG.Blue.Data.dll Syntax class MimeTypeEntityMap : AuditedEntityMapBase<MimeTypeEntity> Constructors MimeTypeEntityMap(ModelBuilder) This constructor creates a new instance of the MimeTypeEntityMap class. Declaration public MimeTypeEntityMap(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The model builder to use with this map. Methods Configure(EntityTypeBuilder<MimeTypeEntity>) This method configures the entity. Declaration public override void Configure(EntityTypeBuilder<MimeTypeEntity> builder) Parameters Type Name Description EntityTypeBuilder < MimeTypeEntity > builder The builder to use for the operation."
  },
  "api/CG.Blue.Data.Repositories.FileTypeRepository.html": {
    "href": "api/CG.Blue.Data.Repositories.FileTypeRepository.html",
    "title": "Class FileTypeRepository",
    "keywords": "Class FileTypeRepository This class is an EFCORE implementation of the interface. Inheritance System.Object FileTypeRepository Implements IFileTypeRepository Namespace : CG.Blue.Data.Repositories Assembly : CG.Blue.Data.dll Syntax class FileTypeRepository : RepositoryBase<FileTypeRepository, BlueDbContext> Constructors FileTypeRepository(IMapper, BlueDbContext, ILogger<FileTypeRepository>) This constructor creates a new instance of the FileTypeRepository class. Declaration public FileTypeRepository(IMapper mapper, BlueDbContext dbContext, ILogger<FileTypeRepository> logger) Parameters Type Name Description IMapper mapper The auto-mapper to use with this repository. BlueDbContext dbContext The data-context to use with this repository. ILogger < FileTypeRepository > logger The logger to use with this repository. Fields _mapper This field contains the auto-mapper for this repository. Declaration protected readonly IMapper _mapper Field Value Type Description IMapper Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(FileTypeModel, CancellationToken) Declaration public virtual async Task<FileTypeModel> CreateAsync(FileTypeModel fileType, CancellationToken cancellationToken = null) Parameters Type Name Description FileTypeModel fileType CancellationToken cancellationToken Returns Type Description Task < FileTypeModel > DeleteAsync(FileTypeModel, CancellationToken) Declaration public virtual async Task DeleteAsync(FileTypeModel fileType, CancellationToken cancellationToken = null) Parameters Type Name Description FileTypeModel fileType CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<FileTypeModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < FileTypeModel >> FindByExtensionAsync(String, CancellationToken) Declaration public virtual async Task<FileTypeModel?> FindByExtensionAsync(string extension, CancellationToken cancellationToken = null) Parameters Type Name Description System.String extension CancellationToken cancellationToken Returns Type Description Task < System.Nullable < FileTypeModel >> UpdateAsync(FileTypeModel, CancellationToken) Declaration public virtual async Task<FileTypeModel> UpdateAsync(FileTypeModel fileType, CancellationToken cancellationToken = null) Parameters Type Name Description FileTypeModel fileType CancellationToken cancellationToken Returns Type Description Task < FileTypeModel > Implements IFileTypeRepository"
  },
  "api/CG.Blue.Data.Repositories.html": {
    "href": "api/CG.Blue.Data.Repositories.html",
    "title": "Namespace CG.Blue.Data.Repositories",
    "keywords": "Namespace CG.Blue.Data.Repositories Classes FileTypeRepository This class is an EFCORE implementation of the interface. MimeTypeRepository This class is an EFCORE implementation of the interface."
  },
  "api/CG.Blue.Data.Repositories.MimeTypeRepository.html": {
    "href": "api/CG.Blue.Data.Repositories.MimeTypeRepository.html",
    "title": "Class MimeTypeRepository",
    "keywords": "Class MimeTypeRepository This class is an EFCORE implementation of the interface. Inheritance System.Object MimeTypeRepository Implements IMimeTypeRepository Namespace : CG.Blue.Data.Repositories Assembly : CG.Blue.Data.dll Syntax class MimeTypeRepository : RepositoryBase<MimeTypeRepository, BlueDbContext> Constructors MimeTypeRepository(IMapper, BlueDbContext, ILogger<MimeTypeRepository>) This constructor creates a new instance of the MimeTypeRepository class. Declaration public MimeTypeRepository(IMapper mapper, BlueDbContext dbContext, ILogger<MimeTypeRepository> logger) Parameters Type Name Description IMapper mapper The auto-mapper to use with this repository. BlueDbContext dbContext The data-context to use with this repository. ILogger < MimeTypeRepository > logger The logger to use with this repository. Fields _mapper This field contains the auto-mapper for this repository. Declaration protected readonly IMapper _mapper Field Value Type Description IMapper Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > AnyAsync(String, String, CancellationToken) Declaration public virtual async Task<bool> AnyAsync(string type, string subType, CancellationToken cancellationToken = null) Parameters Type Name Description System.String type System.String subType CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(MimeTypeModel, CancellationToken) Declaration public virtual async Task<MimeTypeModel> CreateAsync(MimeTypeModel mimeType, CancellationToken cancellationToken = null) Parameters Type Name Description MimeTypeModel mimeType CancellationToken cancellationToken Returns Type Description Task < MimeTypeModel > DeleteAsync(MimeTypeModel, CancellationToken) Declaration public virtual async Task DeleteAsync(MimeTypeModel mimeType, CancellationToken cancellationToken = null) Parameters Type Name Description MimeTypeModel mimeType CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<MimeTypeModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < MimeTypeModel >> FindByExtensionAsync(String, CancellationToken) Declaration public virtual async Task<IEnumerable<MimeTypeModel>> FindByExtensionAsync(string extension, CancellationToken cancellationToken = null) Parameters Type Name Description System.String extension CancellationToken cancellationToken Returns Type Description Task < IEnumerable < MimeTypeModel >> FindByIdAsync(Int32, CancellationToken) Declaration public virtual async Task<MimeTypeModel?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id CancellationToken cancellationToken Returns Type Description Task < System.Nullable < MimeTypeModel >> FindByTypesAsync(String, String, CancellationToken) Declaration public virtual async Task<IEnumerable<MimeTypeModel>> FindByTypesAsync(string type, string subType, CancellationToken cancellationToken = null) Parameters Type Name Description System.String type System.String subType CancellationToken cancellationToken Returns Type Description Task < IEnumerable < MimeTypeModel >> UpdateAsync(MimeTypeModel, CancellationToken) Declaration public virtual async Task<MimeTypeModel> UpdateAsync(MimeTypeModel mimeType, CancellationToken cancellationToken = null) Parameters Type Name Description MimeTypeModel mimeType CancellationToken cancellationToken Returns Type Description Task < MimeTypeModel > Implements IMimeTypeRepository"
  },
  "api/CG.Blue.Data.Sqlite.BlueDbContextDesignTimeFactory.html": {
    "href": "api/CG.Blue.Data.Sqlite.BlueDbContextDesignTimeFactory.html",
    "title": "Class BlueDbContextDesignTimeFactory",
    "keywords": "Class BlueDbContextDesignTimeFactory This class is a SQLite design time factory for the BlueDbContext data-context type. Inheritance System.Object BlueDbContextDesignTimeFactory Namespace : CG.Blue.Data.Sqlite Assembly : CG.Blue.Data.Sqlite.dll Syntax class BlueDbContextDesignTimeFactory : DesignTimeDbContextFactory<BlueDbContext> Methods OnConfigureDataContextOptions(DbContextOptionsBuilder<BlueDbContext>, IConfiguration) This method is overridden in order to configure the options for a Sqlite data-context instance. Declaration protected override void OnConfigureDataContextOptions(DbContextOptionsBuilder<BlueDbContext> optionsBuilder, IConfiguration configuration) Parameters Type Name Description DbContextOptionsBuilder < BlueDbContext > optionsBuilder The data-context options builder to use for the operation. IConfiguration configuration The configuration to use for the operation."
  },
  "api/CG.Blue.Data.Sqlite.html": {
    "href": "api/CG.Blue.Data.Sqlite.html",
    "title": "Namespace CG.Blue.Data.Sqlite",
    "keywords": "Namespace CG.Blue.Data.Sqlite Classes BlueDbContextDesignTimeFactory This class is a SQLite design time factory for the BlueDbContext data-context type."
  },
  "api/CG.Blue.Data.Sqlite.Migrations.BlueDbContextModelSnapshot.html": {
    "href": "api/CG.Blue.Data.Sqlite.Migrations.BlueDbContextModelSnapshot.html",
    "title": "Class BlueDbContextModelSnapshot",
    "keywords": "Class BlueDbContextModelSnapshot Inheritance System.Object Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot BlueDbContextModelSnapshot Inherited Members Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.Model System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue.Data.Sqlite.Migrations Assembly : CG.Blue.Data.Sqlite.dll Syntax [DbContext(typeof(BlueDbContext))] class BlueDbContextModelSnapshot : ModelSnapshot Methods BuildModel(ModelBuilder) Declaration protected override void BuildModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.BuildModel(Microsoft.EntityFrameworkCore.ModelBuilder)"
  },
  "api/CG.Blue.Data.Sqlite.Migrations.html": {
    "href": "api/CG.Blue.Data.Sqlite.Migrations.html",
    "title": "Namespace CG.Blue.Data.Sqlite.Migrations",
    "keywords": "Namespace CG.Blue.Data.Sqlite.Migrations Classes BlueDbContextModelSnapshot InitialCreate"
  },
  "api/CG.Blue.Data.Sqlite.Migrations.InitialCreate.html": {
    "href": "api/CG.Blue.Data.Sqlite.Migrations.InitialCreate.html",
    "title": "Class InitialCreate",
    "keywords": "Class InitialCreate Inheritance System.Object Microsoft.EntityFrameworkCore.Migrations.Migration InitialCreate Inherited Members Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel Microsoft.EntityFrameworkCore.Migrations.Migration.UpOperations Microsoft.EntityFrameworkCore.Migrations.Migration.DownOperations Microsoft.EntityFrameworkCore.Migrations.Migration.ActiveProvider System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue.Data.Sqlite.Migrations Assembly : CG.Blue.Data.Sqlite.dll Syntax [DbContext(typeof(BlueDbContext))] [Migration(\"20230113163905_InitialCreate\")] public class InitialCreate : Migration Methods BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder) Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder) Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)"
  },
  "api/CG.Blue.Data.SqlServer.BlueDbContextDesignTimeFactory.html": {
    "href": "api/CG.Blue.Data.SqlServer.BlueDbContextDesignTimeFactory.html",
    "title": "Class BlueDbContextDesignTimeFactory",
    "keywords": "Class BlueDbContextDesignTimeFactory This class is a SQLServer design time factory for the BlueDbContext data-context type. Inheritance System.Object BlueDbContextDesignTimeFactory Namespace : CG.Blue.Data.SqlServer Assembly : CG.Blue.Data.SqlServer.dll Syntax class BlueDbContextDesignTimeFactory : DesignTimeDbContextFactory<BlueDbContext> Methods OnConfigureDataContextOptions(DbContextOptionsBuilder<BlueDbContext>, IConfiguration) This method is overridden in order to configure the options for a SqlServer data-context instance. Declaration protected override void OnConfigureDataContextOptions(DbContextOptionsBuilder<BlueDbContext> optionsBuilder, IConfiguration configuration) Parameters Type Name Description DbContextOptionsBuilder < BlueDbContext > optionsBuilder The data-context options builder to use for the operation. IConfiguration configuration The configuration to use for the operation."
  },
  "api/CG.Blue.Data.SqlServer.html": {
    "href": "api/CG.Blue.Data.SqlServer.html",
    "title": "Namespace CG.Blue.Data.SqlServer",
    "keywords": "Namespace CG.Blue.Data.SqlServer Classes BlueDbContextDesignTimeFactory This class is a SQLServer design time factory for the BlueDbContext data-context type."
  },
  "api/CG.Blue.Data.SqlServer.Migrations.BlueDbContextModelSnapshot.html": {
    "href": "api/CG.Blue.Data.SqlServer.Migrations.BlueDbContextModelSnapshot.html",
    "title": "Class BlueDbContextModelSnapshot",
    "keywords": "Class BlueDbContextModelSnapshot Inheritance System.Object Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot BlueDbContextModelSnapshot Inherited Members Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.Model System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue.Data.SqlServer.Migrations Assembly : CG.Blue.Data.SqlServer.dll Syntax [DbContext(typeof(BlueDbContext))] class BlueDbContextModelSnapshot : ModelSnapshot Methods BuildModel(ModelBuilder) Declaration protected override void BuildModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.BuildModel(Microsoft.EntityFrameworkCore.ModelBuilder)"
  },
  "api/CG.Blue.Data.SqlServer.Migrations.html": {
    "href": "api/CG.Blue.Data.SqlServer.Migrations.html",
    "title": "Namespace CG.Blue.Data.SqlServer.Migrations",
    "keywords": "Namespace CG.Blue.Data.SqlServer.Migrations Classes BlueDbContextModelSnapshot InitialCreate"
  },
  "api/CG.Blue.Data.SqlServer.Migrations.InitialCreate.html": {
    "href": "api/CG.Blue.Data.SqlServer.Migrations.InitialCreate.html",
    "title": "Class InitialCreate",
    "keywords": "Class InitialCreate Inheritance System.Object Microsoft.EntityFrameworkCore.Migrations.Migration InitialCreate Inherited Members Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel Microsoft.EntityFrameworkCore.Migrations.Migration.UpOperations Microsoft.EntityFrameworkCore.Migrations.Migration.DownOperations Microsoft.EntityFrameworkCore.Migrations.Migration.ActiveProvider System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue.Data.SqlServer.Migrations Assembly : CG.Blue.Data.SqlServer.dll Syntax [DbContext(typeof(BlueDbContext))] [Migration(\"20230113163912_InitialCreate\")] public class InitialCreate : Migration Methods BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder) Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder) Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)"
  },
  "api/CG.Blue.Directors.DirectorException.html": {
    "href": "api/CG.Blue.Directors.DirectorException.html",
    "title": "Class DirectorException",
    "keywords": "Class DirectorException This class represents a director related exception. Inheritance System.Object DirectorException Namespace : CG.Blue.Directors Assembly : CG.Blue.Primitives.dll Syntax public class DirectorException : Exception Constructors DirectorException() This constructor creates a new instance of the DirectorException class. Declaration public DirectorException() DirectorException(SerializationInfo, StreamingContext) This constructor creates a new instance of the DirectorException class. Declaration public DirectorException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info to use for the exception. StreamingContext context The streaming context to use for the exception. DirectorException(String) This constructor creates a new instance of the DirectorException class. Declaration public DirectorException(string message) Parameters Type Name Description System.String message The message to use for the exception. DirectorException(String, Exception) This constructor creates a new instance of the DirectorException class. Declaration public DirectorException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. Exception innerException An optional inner exception reference."
  },
  "api/CG.Blue.Directors.html": {
    "href": "api/CG.Blue.Directors.html",
    "title": "Namespace CG.Blue.Directors",
    "keywords": "Namespace CG.Blue.Directors Classes DirectorException This class represents a director related exception. SeedDirector This class is a default implementation of the ISeedDirector interface. Interfaces ISeedDirector This interface represents an object that performs data seeding operations."
  },
  "api/CG.Blue.Directors.ISeedDirector.html": {
    "href": "api/CG.Blue.Directors.ISeedDirector.html",
    "title": "Interface ISeedDirector",
    "keywords": "Interface ISeedDirector This interface represents an object that performs data seeding operations. Namespace : CG.Blue.Directors Assembly : CG.Blue.Abstractions.dll Syntax public interface ISeedDirector Methods SeedFileTypesAsync(List<FileTypeOptions>, String, Boolean, CancellationToken) This method performs a seeding operation for FileTypesOptions objects. Declaration Task SeedFileTypesAsync(List<FileTypeOptions> fileTypes, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < FileTypeOptions > fileTypes The data to use for the operation. System.String userName The name of the user performing the operation. System.Boolean force true to force the seeding operation when there are existing entities in the underlying data-store; false otherwise. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition DirectorException This exception is thrown whenever the director fails to complete the operation. SeedMimeTypesAsync(List<MimeTypeModel>, String, Boolean, CancellationToken) This method performs a seeding operation for objects. Declaration Task SeedMimeTypesAsync(List<MimeTypeModel> mimeTypes, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < MimeTypeModel > mimeTypes The data to use for the operation. System.String userName The name of the user performing the operation. System.Boolean force true to force the seeding operation when there are existing entities in the underlying data-store; false otherwise. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition DirectorException This exception is thrown whenever the director fails to complete the operation."
  },
  "api/CG.Blue.Directors.SeedDirector.html": {
    "href": "api/CG.Blue.Directors.SeedDirector.html",
    "title": "Class SeedDirector",
    "keywords": "Class SeedDirector This class is a default implementation of the ISeedDirector interface. Inheritance System.Object SeedDirector Implements ISeedDirector Namespace : CG.Blue.Directors Assembly : CG.Blue.dll Syntax public class SeedDirector : SeedDirectorBase<SeedDirector>, ISeedDirector Constructors SeedDirector(IFileTypeManager, IMimeTypeManager, ILogger<SeedDirector>) This constructor creates a new instance of the SeedDirector class. Declaration public SeedDirector(IFileTypeManager fileTypeManager, IMimeTypeManager mimeTypeManager, ILogger<SeedDirector> logger) Parameters Type Name Description IFileTypeManager fileTypeManager The file type manager to use with this director. IMimeTypeManager mimeTypeManager The mime type manager to use with this director. ILogger < SeedDirector > logger The logger to use with this director. Fields _fileTypeManager This field contains the file type manager for this director. Declaration protected readonly IFileTypeManager _fileTypeManager Field Value Type Description IFileTypeManager _mimeTypeManager This field contains the mime type manager for this director. Declaration protected readonly IMimeTypeManager _mimeTypeManager Field Value Type Description IMimeTypeManager Methods BeforeSeedAsync(String, Boolean, CancellationToken) Declaration protected override async Task BeforeSeedAsync(string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userName System.Boolean force CancellationToken cancellationToken Returns Type Description Task SeedFileTypesAsync(IConfiguration, String, Boolean, CancellationToken) This method performs a seeding operation for objects, from the given configuration. Declaration protected virtual async Task SeedFileTypesAsync(IConfiguration dataSection, string userName, bool force, CancellationToken cancellationToken = null) Parameters Type Name Description IConfiguration dataSection The data to use for the operation. System.String userName The user name of the person performing the operation. System.Boolean force true to force the seeding operation when data already exists in the associated table(s), false to stop the operation whenever data is detected in the associated table(s). CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. SeedFileTypesAsync(List<FileTypeOptions>, String, Boolean, CancellationToken) Declaration public virtual async Task SeedFileTypesAsync(List<FileTypeOptions> fileTypes, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < FileTypeOptions > fileTypes System.String userName System.Boolean force CancellationToken cancellationToken Returns Type Description Task SeedFromConfiguration(String, IConfiguration, String, Boolean, CancellationToken) Declaration protected override async Task SeedFromConfiguration(string objectName, IConfiguration dataSection, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String objectName IConfiguration dataSection System.String userName System.Boolean force CancellationToken cancellationToken Returns Type Description Task SeedMimeTypesAsync(List<MimeTypeModel>, String, Boolean, CancellationToken) Declaration public virtual async Task SeedMimeTypesAsync(List<MimeTypeModel> mimeTypes, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < MimeTypeModel > mimeTypes System.String userName System.Boolean force CancellationToken cancellationToken Returns Type Description Task SeedMimeTypesFromIanaAsync(String, Boolean, CancellationToken) Declaration public virtual async Task SeedMimeTypesFromIanaAsync(string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userName System.Boolean force CancellationToken cancellationToken Returns Type Description Task Implements ISeedDirector"
  },
  "api/CG.Blue.Facades.html": {
    "href": "api/CG.Blue.Facades.html",
    "title": "Namespace CG.Blue.Facades",
    "keywords": "Namespace CG.Blue.Facades Classes SupportFacade This class is a default implementation of the ISupportFacade interface. Interfaces ISupportFacade This interface represents an object that contains support objects for the CG.Blue microservice."
  },
  "api/CG.Blue.Facades.ISupportFacade.html": {
    "href": "api/CG.Blue.Facades.ISupportFacade.html",
    "title": "Interface ISupportFacade",
    "keywords": "Interface ISupportFacade This interface represents an object that contains support objects for the CG.Blue microservice. Namespace : CG.Blue.Facades Assembly : CG.Blue.Abstractions.dll Syntax public interface ISupportFacade Properties FileTypes This property contains an object that performs file type operations. Declaration IFileTypeManager FileTypes { get; } Property Value Type Description IFileTypeManager MimeTypes This property contains an object that performs mime type operations. Declaration IMimeTypeManager MimeTypes { get; } Property Value Type Description IMimeTypeManager"
  },
  "api/CG.Blue.Facades.SupportFacade.html": {
    "href": "api/CG.Blue.Facades.SupportFacade.html",
    "title": "Class SupportFacade",
    "keywords": "Class SupportFacade This class is a default implementation of the ISupportFacade interface. Inheritance System.Object SupportFacade Implements ISupportFacade Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue.Facades Assembly : CG.Blue.dll Syntax class SupportFacade : ISupportFacade Constructors SupportFacade(IMimeTypeManager, IFileTypeManager) This constructor creates a new instance of the SupportFacade class. Declaration public SupportFacade(IMimeTypeManager mimeTypeManager, IFileTypeManager fileTypeManager) Parameters Type Name Description IMimeTypeManager mimeTypeManager The mime type manager to use with this wrapper. IFileTypeManager fileTypeManager The file type manager to use with this wrapper. Fields _fileTypeManager This field contains the file type manager for this wrapper. Declaration protected readonly IFileTypeManager _fileTypeManager Field Value Type Description IFileTypeManager _mimeTypeManager This field contains the mime type manager for this wrapper. Declaration protected readonly IMimeTypeManager _mimeTypeManager Field Value Type Description IMimeTypeManager Properties FileTypes Declaration public virtual IFileTypeManager FileTypes { get; } Property Value Type Description IFileTypeManager MimeTypes Declaration public virtual IMimeTypeManager MimeTypes { get; } Property Value Type Description IMimeTypeManager Implements ISupportFacade"
  },
  "api/CG.Blue.Globals.html": {
    "href": "api/CG.Blue.Globals.html",
    "title": "Class Globals",
    "keywords": "Class Globals This class contains global compile-time constants for the CG.Blue microservice. Inheritance System.Object Globals Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue Assembly : CG.Blue.Primitives.dll Syntax public static class Globals"
  },
  "api/CG.Blue.Globals.Models.FileTypes.html": {
    "href": "api/CG.Blue.Globals.Models.FileTypes.html",
    "title": "Class Globals.Models.FileTypes",
    "keywords": "Class Globals.Models.FileTypes This class contains sizes for properties. Inheritance System.Object Globals.Models.FileTypes Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue Assembly : CG.Blue.Primitives.dll Syntax public static class FileTypes Fields ExtensionLength This constant represents the length of the property. Declaration public const int ExtensionLength = 260 Field Value Type Description System.Int32"
  },
  "api/CG.Blue.Globals.Models.html": {
    "href": "api/CG.Blue.Globals.Models.html",
    "title": "Class Globals.Models",
    "keywords": "Class Globals.Models This class contains model property sizes. Inheritance System.Object Globals.Models Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue Assembly : CG.Blue.Primitives.dll Syntax public static class Models"
  },
  "api/CG.Blue.Globals.Models.MimeTypes.html": {
    "href": "api/CG.Blue.Globals.Models.MimeTypes.html",
    "title": "Class Globals.Models.MimeTypes",
    "keywords": "Class Globals.Models.MimeTypes This class contains sizes for properties. Inheritance System.Object Globals.Models.MimeTypes Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue Assembly : CG.Blue.Primitives.dll Syntax public static class MimeTypes Fields SubTypeLength This constant represents the length of the property. Declaration public const int SubTypeLength = 127 Field Value Type Description System.Int32 TypeLength This constant represents the length of the property. Declaration public const int TypeLength = 127 Field Value Type Description System.Int32"
  },
  "api/CG.Blue.Host.Options.BlueHostedServicesOptions.html": {
    "href": "api/CG.Blue.Host.Options.BlueHostedServicesOptions.html",
    "title": "Class BlueHostedServicesOptions",
    "keywords": "Class BlueHostedServicesOptions This class contains configuration settings for the CG.Blue hosted service layer. Inheritance System.Object BlueHostedServicesOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue.Host.Options Assembly : CG.Blue.Services.dll Syntax class BlueHostedServicesOptions"
  },
  "api/CG.Blue.Host.Options.html": {
    "href": "api/CG.Blue.Host.Options.html",
    "title": "Namespace CG.Blue.Host.Options",
    "keywords": "Namespace CG.Blue.Host.Options Classes BlueHostedServicesOptions This class contains configuration settings for the CG.Blue hosted service layer."
  },
  "api/CG.Blue.Host.Pages.ErrorModel.html": {
    "href": "api/CG.Blue.Host.Pages.ErrorModel.html",
    "title": "Class ErrorModel",
    "keywords": "Class ErrorModel This class is the code-behind for the Error page. Inheritance System.Object ErrorModel Namespace : CG.Blue.Host.Pages Assembly : CG.Blue.Host.dll Syntax public class ErrorModel : PageModel Constructors ErrorModel(ILogger<ErrorModel>) This constructor creates a new instance of the ErrorModel class. Declaration public ErrorModel(ILogger<ErrorModel> logger) Parameters Type Name Description ILogger < ErrorModel > logger The logger for this model Fields _logger This field contains the logger for this model. Declaration readonly ILogger<ErrorModel> _logger Field Value Type Description ILogger < ErrorModel > Properties RequestId This property contains the request identifier for this model. Declaration public string RequestId { get; set; } Property Value Type Description System.String ShowRequestId This property indicates whether or not to show the RequestId property on the error page. Declaration public bool ShowRequestId { get; } Property Value Type Description System.Boolean Methods OnGet() This method is called when the page receives an HTTP GET verb. Declaration public void OnGet()"
  },
  "api/CG.Blue.Host.Pages.html": {
    "href": "api/CG.Blue.Host.Pages.html",
    "title": "Namespace CG.Blue.Host.Pages",
    "keywords": "Namespace CG.Blue.Host.Pages Classes ErrorModel This class is the code-behind for the Error page."
  },
  "api/CG.Blue.Host.Themes.BlueTheme.html": {
    "href": "api/CG.Blue.Host.Themes.BlueTheme.html",
    "title": "Class BlueTheme",
    "keywords": "Class BlueTheme This class represents the default MudBlazor UI theme. Inheritance System.Object BlueTheme Namespace : CG.Blue.Host.Themes Assembly : CG.Blue.Host.dll Syntax public class BlueTheme : DefaultTheme<BlueTheme> Constructors BlueTheme() This constructor creates a new instance of the BlueTheme class. Declaration public BlueTheme()"
  },
  "api/CG.Blue.Host.Themes.html": {
    "href": "api/CG.Blue.Host.Themes.html",
    "title": "Namespace CG.Blue.Host.Themes",
    "keywords": "Namespace CG.Blue.Host.Themes Classes BlueTheme This class represents the default MudBlazor UI theme."
  },
  "api/CG.Blue.html": {
    "href": "api/CG.Blue.html",
    "title": "Namespace CG.Blue",
    "keywords": "Namespace CG.Blue Classes BlueApi This class is a default implementation of the IBlueApi interface. Globals This class contains global compile-time constants for the CG.Blue microservice. Globals.Models This class contains model property sizes. Globals.Models.FileTypes This class contains sizes for properties. Globals.Models.MimeTypes This class contains sizes for properties. Interfaces IBlueApi This interface represents the API for the CG.Blue microservice."
  },
  "api/CG.Blue.IBlueApi.html": {
    "href": "api/CG.Blue.IBlueApi.html",
    "title": "Interface IBlueApi",
    "keywords": "Interface IBlueApi This interface represents the API for the CG.Blue microservice. Namespace : CG.Blue Assembly : CG.Blue.Abstractions.dll Syntax public interface IBlueApi Properties Support This property contains an object that contains support objects. Declaration ISupportFacade Support { get; } Property Value Type Description ISupportFacade"
  },
  "api/CG.Blue.Managers.FileTypeManager.html": {
    "href": "api/CG.Blue.Managers.FileTypeManager.html",
    "title": "Class FileTypeManager",
    "keywords": "Class FileTypeManager This class is a default implementation of the IFileTypeManager interface. Inheritance System.Object FileTypeManager Implements IFileTypeManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue.Managers Assembly : CG.Blue.dll Syntax class FileTypeManager : IFileTypeManager Constructors FileTypeManager(IFileTypeRepository, ILogger<IFileTypeManager>) This constructor creates a new instance of the FileTypeManager class. Declaration public FileTypeManager(IFileTypeRepository fileTypeRepository, ILogger<IFileTypeManager> logger) Parameters Type Name Description IFileTypeRepository fileTypeRepository The file type repository to use with this manager. ILogger < IFileTypeManager > logger The logger to use with this manager. Fields _fileTypeRepository This field contains the repository for this manager. Declaration protected readonly IFileTypeRepository _fileTypeRepository Field Value Type Description IFileTypeRepository _logger This field contains the logger for this manager. Declaration protected readonly ILogger<IFileTypeManager> _logger Field Value Type Description ILogger < IFileTypeManager > Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(FileTypeModel, String, CancellationToken) Declaration public virtual async Task<FileTypeModel> CreateAsync(FileTypeModel fileType, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description FileTypeModel fileType System.String userName CancellationToken cancellationToken Returns Type Description Task < FileTypeModel > DeleteAsync(FileTypeModel, String, CancellationToken) Declaration public virtual async Task DeleteAsync(FileTypeModel fileType, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description FileTypeModel fileType System.String userName CancellationToken cancellationToken Returns Type Description Task FindByExtensionAsync(String, CancellationToken) Declaration public virtual async Task<FileTypeModel?> FindByExtensionAsync(string extension, CancellationToken cancellationToken = null) Parameters Type Name Description System.String extension CancellationToken cancellationToken Returns Type Description Task < System.Nullable < FileTypeModel >> UpdateAsync(FileTypeModel, String, CancellationToken) Declaration public virtual async Task<FileTypeModel> UpdateAsync(FileTypeModel fileType, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description FileTypeModel fileType System.String userName CancellationToken cancellationToken Returns Type Description Task < FileTypeModel > Implements IFileTypeManager"
  },
  "api/CG.Blue.Managers.html": {
    "href": "api/CG.Blue.Managers.html",
    "title": "Namespace CG.Blue.Managers",
    "keywords": "Namespace CG.Blue.Managers Classes FileTypeManager This class is a default implementation of the IFileTypeManager interface. ManagerException This class represents a manager related exception. MimeTypeManager This class is a default implementation of the IMimeTypeManager interface. Interfaces IFileTypeManager This interface represents an object that manages operations related to objects. IMimeTypeManager This interface represents an object that manages operations related to objects."
  },
  "api/CG.Blue.Managers.IFileTypeManager.html": {
    "href": "api/CG.Blue.Managers.IFileTypeManager.html",
    "title": "Interface IFileTypeManager",
    "keywords": "Interface IFileTypeManager This interface represents an object that manages operations related to objects. Namespace : CG.Blue.Managers Assembly : CG.Blue.Abstractions.dll Syntax public interface IFileTypeManager Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CreateAsync(FileTypeModel, String, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<FileTypeModel> CreateAsync(FileTypeModel fileType, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description FileTypeModel fileType The model to create in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < FileTypeModel > A task to perform the operation that returns the newly created object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. DeleteAsync(FileTypeModel, String, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(FileTypeModel fileType, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description FileTypeModel fileType The model to delete from the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindByExtensionAsync(String, CancellationToken) This method searches for a single matching object using the given file extension. Declaration Task<FileTypeModel?> FindByExtensionAsync(string extension, CancellationToken cancellationToken = null) Parameters Type Name Description System.String extension The file extension to use for the search. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < FileTypeModel >> A task to perform the operation that returns a matching object, if one was found, or NULL otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. UpdateAsync(FileTypeModel, String, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<FileTypeModel> UpdateAsync(FileTypeModel fileType, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description FileTypeModel fileType The model to update in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < FileTypeModel > A task to perform the operation that returns the newly updated object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation."
  },
  "api/CG.Blue.Managers.IMimeTypeManager.html": {
    "href": "api/CG.Blue.Managers.IMimeTypeManager.html",
    "title": "Interface IMimeTypeManager",
    "keywords": "Interface IMimeTypeManager This interface represents an object that manages operations related to objects. Namespace : CG.Blue.Managers Assembly : CG.Blue.Abstractions.dll Syntax public interface IMimeTypeManager Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. AnyAsync(String, String, CancellationToken) This method indicates whether there are any objects in the underlying storage that match the given type / subtype. Declaration Task<bool> AnyAsync(string type, string subType, CancellationToken cancellationToken = null) Parameters Type Name Description System.String type The MIME type to use for the search. System.String subType The MIME sub-type to use for the search. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CreateAsync(MimeTypeModel, String, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<MimeTypeModel> CreateAsync(MimeTypeModel mimeType, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description MimeTypeModel mimeType The model to create in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < MimeTypeModel > A task to perform the operation that returns the newly created object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. DeleteAsync(MimeTypeModel, String, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(MimeTypeModel mimeType, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description MimeTypeModel mimeType The model to delete from the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindAllAsync(CancellationToken) This method searches for a sequence of objects. Declaration Task<IEnumerable<MimeTypeModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < MimeTypeModel >> A task to perform the operation that returns the results of the search. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindByExtensionAsync(String, CancellationToken) This method searches for a sequence of objects that have an extension matching the given value. Declaration Task<IEnumerable<MimeTypeModel>> FindByExtensionAsync(string extension, CancellationToken cancellationToken = null) Parameters Type Name Description System.String extension The file extension to use for the search. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < MimeTypeModel >> A task to perform the operation that returns a collection of matching objects. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindByIdAsync(Int32, CancellationToken) This method searches for a single matching object using the given identifier. Declaration Task<MimeTypeModel?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id The identifier to use for the search. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < MimeTypeModel >> A task to perform the operation that returns a matching object, if one was found, or NULL otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindByTypesAsync(String, String, CancellationToken) This method searches for matching objects using the given type and/or subtype. Declaration Task<IEnumerable<MimeTypeModel>> FindByTypesAsync(string type, string subType, CancellationToken cancellationToken = null) Parameters Type Name Description System.String type The MIME type to use for the search. System.String subType The MIME sub-type to use for the search. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < MimeTypeModel >> A task to perform the operation that returns the results of the search. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. UpdateAsync(MimeTypeModel, String, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<MimeTypeModel> UpdateAsync(MimeTypeModel mimeType, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description MimeTypeModel mimeType The model to update in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < MimeTypeModel > A task to perform the operation that returns the newly updated object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation."
  },
  "api/CG.Blue.Managers.ManagerException.html": {
    "href": "api/CG.Blue.Managers.ManagerException.html",
    "title": "Class ManagerException",
    "keywords": "Class ManagerException This class represents a manager related exception. Inheritance System.Object ManagerException Namespace : CG.Blue.Managers Assembly : CG.Blue.Primitives.dll Syntax public class ManagerException : Exception Constructors ManagerException() This constructor creates a new instance of the ManagerException class. Declaration public ManagerException() ManagerException(SerializationInfo, StreamingContext) This constructor creates a new instance of the ManagerException class. Declaration public ManagerException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info to use for the exception. StreamingContext context The streaming context to use for the exception. ManagerException(String) This constructor creates a new instance of the ManagerException class. Declaration public ManagerException(string message) Parameters Type Name Description System.String message The message to use for the exception. ManagerException(String, Exception) This constructor creates a new instance of the ManagerException class. Declaration public ManagerException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. Exception innerException An optional inner exception reference."
  },
  "api/CG.Blue.Managers.MimeTypeManager.html": {
    "href": "api/CG.Blue.Managers.MimeTypeManager.html",
    "title": "Class MimeTypeManager",
    "keywords": "Class MimeTypeManager This class is a default implementation of the IMimeTypeManager interface. Inheritance System.Object MimeTypeManager Implements IMimeTypeManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue.Managers Assembly : CG.Blue.dll Syntax class MimeTypeManager : IMimeTypeManager Constructors MimeTypeManager(IMimeTypeRepository, ILogger<IMimeTypeManager>) This constructor creates a new instance of the MimeTypeManager class. Declaration public MimeTypeManager(IMimeTypeRepository mimeTypeRepository, ILogger<IMimeTypeManager> logger) Parameters Type Name Description IMimeTypeRepository mimeTypeRepository The mime type repository to use with this manager. ILogger < IMimeTypeManager > logger The logger to use with this manager. Fields _logger This field contains the logger for this manager. Declaration protected readonly ILogger<IMimeTypeManager> _logger Field Value Type Description ILogger < IMimeTypeManager > _mimeTypeRepository This field contains the repository for this manager. Declaration protected readonly IMimeTypeRepository _mimeTypeRepository Field Value Type Description IMimeTypeRepository Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > AnyAsync(String, String, CancellationToken) Declaration public virtual async Task<bool> AnyAsync(string type, string subType, CancellationToken cancellationToken = null) Parameters Type Name Description System.String type System.String subType CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(MimeTypeModel, String, CancellationToken) Declaration public virtual async Task<MimeTypeModel> CreateAsync(MimeTypeModel mimeType, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description MimeTypeModel mimeType System.String userName CancellationToken cancellationToken Returns Type Description Task < MimeTypeModel > DeleteAsync(MimeTypeModel, String, CancellationToken) Declaration public virtual async Task DeleteAsync(MimeTypeModel mimeType, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description MimeTypeModel mimeType System.String userName CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<MimeTypeModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < MimeTypeModel >> FindByExtensionAsync(String, CancellationToken) Declaration public virtual async Task<IEnumerable<MimeTypeModel>> FindByExtensionAsync(string extension, CancellationToken cancellationToken = null) Parameters Type Name Description System.String extension CancellationToken cancellationToken Returns Type Description Task < IEnumerable < MimeTypeModel >> FindByIdAsync(Int32, CancellationToken) Declaration public virtual async Task<MimeTypeModel?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id CancellationToken cancellationToken Returns Type Description Task < System.Nullable < MimeTypeModel >> FindByTypesAsync(String, String, CancellationToken) Declaration public virtual async Task<IEnumerable<MimeTypeModel>> FindByTypesAsync(string type, string subType, CancellationToken cancellationToken = null) Parameters Type Name Description System.String type System.String subType CancellationToken cancellationToken Returns Type Description Task < IEnumerable < MimeTypeModel >> UpdateAsync(MimeTypeModel, String, CancellationToken) Declaration public virtual async Task<MimeTypeModel> UpdateAsync(MimeTypeModel mimeType, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description MimeTypeModel mimeType System.String userName CancellationToken cancellationToken Returns Type Description Task < MimeTypeModel > Implements IMimeTypeManager"
  },
  "api/CG.Blue.Models.AuditedModelBase.html": {
    "href": "api/CG.Blue.Models.AuditedModelBase.html",
    "title": "Class AuditedModelBase",
    "keywords": "Class AuditedModelBase This class represents a base model. Inheritance System.Object AuditedModelBase FileTypeModel MimeTypeModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue.Models Assembly : CG.Blue.Primitives.dll Syntax public class AuditedModelBase Properties CreatedBy This property contains the name of the person who created the model. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOnUtc This property contains the date/time when the model was created. Declaration public DateTime CreatedOnUtc { get; set; } Property Value Type Description DateTime LastUpdatedBy This property contains the name of the last person to update the model. Declaration public string LastUpdatedBy { get; set; } Property Value Type Description System.String LastUpdatedOnUtc This property contains the date/time when the model was last updated. Declaration public DateTime? LastUpdatedOnUtc { get; set; } Property Value Type Description System.Nullable < DateTime >"
  },
  "api/CG.Blue.Models.FileTypeModel.html": {
    "href": "api/CG.Blue.Models.FileTypeModel.html",
    "title": "Class FileTypeModel",
    "keywords": "Class FileTypeModel This class is a model that represents a file type. Inheritance System.Object AuditedModelBase FileTypeModel Inherited Members AuditedModelBase.CreatedBy AuditedModelBase.CreatedOnUtc AuditedModelBase.LastUpdatedBy AuditedModelBase.LastUpdatedOnUtc System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue.Models Assembly : CG.Blue.Primitives.dll Syntax public class FileTypeModel : AuditedModelBase Properties Extension This property contains the extension for the file type. Declaration public string Extension { get; set; } Property Value Type Description System.String Id This property contains the unique identifier for the file type. Declaration public int Id { get; set; } Property Value Type Description System.Int32 MimeType This property contains the associated MIME type. Declaration public virtual MimeTypeModel MimeType { get; set; } Property Value Type Description MimeTypeModel"
  },
  "api/CG.Blue.Models.html": {
    "href": "api/CG.Blue.Models.html",
    "title": "Namespace CG.Blue.Models",
    "keywords": "Namespace CG.Blue.Models Classes AuditedModelBase This class represents a base model. FileTypeModel This class is a model that represents a file type. MimeTypeModel"
  },
  "api/CG.Blue.Models.MimeTypeModel.html": {
    "href": "api/CG.Blue.Models.MimeTypeModel.html",
    "title": "Class MimeTypeModel",
    "keywords": "Class MimeTypeModel Inheritance System.Object AuditedModelBase MimeTypeModel Inherited Members AuditedModelBase.CreatedBy AuditedModelBase.CreatedOnUtc AuditedModelBase.LastUpdatedBy AuditedModelBase.LastUpdatedOnUtc System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue.Models Assembly : CG.Blue.Primitives.dll Syntax public class MimeTypeModel : AuditedModelBase Properties FileTypes This property contains the associated file types. Declaration public virtual ICollection<FileTypeModel> FileTypes { get; set; } Property Value Type Description ICollection < FileTypeModel > Id This property contains the unique identifier for the MIME type. Declaration public int Id { get; set; } Property Value Type Description System.Int32 SubType This property contains the MIME sub-type. Declaration public string SubType { get; set; } Property Value Type Description System.String Type This property contains the MIME type. Declaration public string Type { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Blue.Options.BlueBllOptions.html": {
    "href": "api/CG.Blue.Options.BlueBllOptions.html",
    "title": "Class BlueBllOptions",
    "keywords": "Class BlueBllOptions This class contains configuration settings for the CG.Blue business logic layer. Inheritance System.Object BlueBllOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue.Options Assembly : CG.Blue.Primitives.dll Syntax public class BlueBllOptions"
  },
  "api/CG.Blue.Options.FileTypeOptions.html": {
    "href": "api/CG.Blue.Options.FileTypeOptions.html",
    "title": "Class FileTypeOptions",
    "keywords": "Class FileTypeOptions This class contains configuration settings for seeding a file type. Inheritance System.Object FileTypeOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue.Options Assembly : CG.Blue.Abstractions.dll Syntax public class FileTypeOptions Properties Extensions This property contains a list of extensions for the file type. Declaration public List<string> Extensions { get; set; } Property Value Type Description List < System.String > MimeType This property contains the complete mime type for the file type. Declaration public string MimeType { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Blue.Options.FileTypesOptions.html": {
    "href": "api/CG.Blue.Options.FileTypesOptions.html",
    "title": "Class FileTypesOptions",
    "keywords": "Class FileTypesOptions This class contains configuration settings for seeding file types. Inheritance System.Object FileTypesOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue.Options Assembly : CG.Blue.Abstractions.dll Syntax public class FileTypesOptions Properties FileTypes This property contains a list of file types. Declaration public List<FileTypeOptions> FileTypes { get; set; } Property Value Type Description List < FileTypeOptions >"
  },
  "api/CG.Blue.Options.html": {
    "href": "api/CG.Blue.Options.html",
    "title": "Namespace CG.Blue.Options",
    "keywords": "Namespace CG.Blue.Options Classes BlueBllOptions This class contains configuration settings for the CG.Blue business logic layer. FileTypeOptions This class contains configuration settings for seeding a file type. FileTypesOptions This class contains configuration settings for seeding file types."
  },
  "api/CG.Blue.Repositories.html": {
    "href": "api/CG.Blue.Repositories.html",
    "title": "Namespace CG.Blue.Repositories",
    "keywords": "Namespace CG.Blue.Repositories Classes RepositoryException This class represents a repository related exception. Interfaces IFileTypeRepository This interface represents an object that manages the storage and retrieval of objects. IMimeTypeRepository This interface represents an object that manages the storage and retrieval of objects."
  },
  "api/CG.Blue.Repositories.IFileTypeRepository.html": {
    "href": "api/CG.Blue.Repositories.IFileTypeRepository.html",
    "title": "Interface IFileTypeRepository",
    "keywords": "Interface IFileTypeRepository This interface represents an object that manages the storage and retrieval of objects. Namespace : CG.Blue.Repositories Assembly : CG.Blue.Abstractions.dll Syntax public interface IFileTypeRepository Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CreateAsync(FileTypeModel, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<FileTypeModel> CreateAsync(FileTypeModel fileType, CancellationToken cancellationToken = null) Parameters Type Name Description FileTypeModel fileType The model to create in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < FileTypeModel > A task to perform the operation that returns the newly created object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. DeleteAsync(FileTypeModel, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(FileTypeModel fileType, CancellationToken cancellationToken = null) Parameters Type Name Description FileTypeModel fileType The model to delete from the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<FileTypeModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < FileTypeModel >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindByExtensionAsync(String, CancellationToken) This method searches for a single matching object using the given file extension. Declaration Task<FileTypeModel?> FindByExtensionAsync(string extension, CancellationToken cancellationToken = null) Parameters Type Name Description System.String extension The file extension to use for the search. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < FileTypeModel >> A task to perform the operation that returns a matching object, if one was found, or NULL otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. UpdateAsync(FileTypeModel, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<FileTypeModel> UpdateAsync(FileTypeModel fileType, CancellationToken cancellationToken = null) Parameters Type Name Description FileTypeModel fileType The model to update in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < FileTypeModel > A task to perform the operation that returns the newly updated object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation."
  },
  "api/CG.Blue.Repositories.IMimeTypeRepository.html": {
    "href": "api/CG.Blue.Repositories.IMimeTypeRepository.html",
    "title": "Interface IMimeTypeRepository",
    "keywords": "Interface IMimeTypeRepository This interface represents an object that manages the storage and retrieval of objects. Namespace : CG.Blue.Repositories Assembly : CG.Blue.Abstractions.dll Syntax public interface IMimeTypeRepository Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. AnyAsync(String, String, CancellationToken) This method indicates whether there are any objects in the underlying storage that match the given type / subtype. Declaration Task<bool> AnyAsync(string type, string subType, CancellationToken cancellationToken = null) Parameters Type Name Description System.String type The MIME type to use for the search. System.String subType The MIME sub-type to use for the search. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CreateAsync(MimeTypeModel, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<MimeTypeModel> CreateAsync(MimeTypeModel mimeType, CancellationToken cancellationToken = null) Parameters Type Name Description MimeTypeModel mimeType The model to create in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < MimeTypeModel > A task to perform the operation that returns the newly created object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. DeleteAsync(MimeTypeModel, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(MimeTypeModel mimeType, CancellationToken cancellationToken = null) Parameters Type Name Description MimeTypeModel mimeType The model to delete from the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindAllAsync(CancellationToken) This method searches for a sequence of objects. Declaration Task<IEnumerable<MimeTypeModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < MimeTypeModel >> A task to perform the operation that returns the results of the search. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindByExtensionAsync(String, CancellationToken) This method searches for a sequence of objects that have an extension matching the given value. Declaration Task<IEnumerable<MimeTypeModel>> FindByExtensionAsync(string extension, CancellationToken cancellationToken = null) Parameters Type Name Description System.String extension The file extension to use for the search. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < MimeTypeModel >> A task to perform the operation that returns a collection of matching objects. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindByIdAsync(Int32, CancellationToken) This method searches for a single matching object using the given identifier. Declaration Task<MimeTypeModel?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id The identifier to use for the search. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < MimeTypeModel >> A task to perform the operation that returns a matching object, if one was found, or NULL otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindByTypesAsync(String, String, CancellationToken) This method searches for matching objects using the given type and/or subtype. Declaration Task<IEnumerable<MimeTypeModel>> FindByTypesAsync(string type, string subType, CancellationToken cancellationToken = null) Parameters Type Name Description System.String type The MIME type to use for the search. System.String subType The MIME sub-type to use for the search. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < MimeTypeModel >> A task to perform the operation that returns the results of the search. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. UpdateAsync(MimeTypeModel, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<MimeTypeModel> UpdateAsync(MimeTypeModel mimeType, CancellationToken cancellationToken = null) Parameters Type Name Description MimeTypeModel mimeType The model to update in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < MimeTypeModel > A task to perform the operation that returns the newly updated object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation."
  },
  "api/CG.Blue.Repositories.RepositoryException.html": {
    "href": "api/CG.Blue.Repositories.RepositoryException.html",
    "title": "Class RepositoryException",
    "keywords": "Class RepositoryException This class represents a repository related exception. Inheritance System.Object RepositoryException Namespace : CG.Blue.Repositories Assembly : CG.Blue.Primitives.dll Syntax public class RepositoryException : Exception Constructors RepositoryException() This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException() RepositoryException(SerializationInfo, StreamingContext) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info to use for the exception. StreamingContext context The streaming context to use for the exception. RepositoryException(String) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(string message) Parameters Type Name Description System.String message The message to use for the exception. RepositoryException(String, Exception) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. Exception innerException An optional inner exception reference."
  },
  "api/CG.Blue.Swagger.html": {
    "href": "api/CG.Blue.Swagger.html",
    "title": "Namespace CG.Blue.Swagger",
    "keywords": "Namespace CG.Blue.Swagger Classes SwaggerConfiguration This class is a default implementation of the interface. SwaggerDefaultValues This class is a default implementation of the interface."
  },
  "api/CG.Blue.Swagger.SwaggerConfiguration.html": {
    "href": "api/CG.Blue.Swagger.SwaggerConfiguration.html",
    "title": "Class SwaggerConfiguration",
    "keywords": "Class SwaggerConfiguration This class is a default implementation of the interface. Inheritance System.Object SwaggerConfiguration Namespace : CG.Blue.Swagger Assembly : CG.Blue.Controllers.dll Syntax class SwaggerConfiguration : IConfigureOptions<SwaggerGenOptions> Constructors SwaggerConfiguration(IApiVersionDescriptionProvider) This constructor creates a new instance of the SwaggerConfiguration class. Declaration public SwaggerConfiguration(IApiVersionDescriptionProvider provider) Parameters Type Name Description IApiVersionDescriptionProvider provider The _provider to use with this configurator. Fields _provider This field contains the _provider for this configurator. Declaration protected readonly IApiVersionDescriptionProvider _provider Field Value Type Description IApiVersionDescriptionProvider Methods Configure(SwaggerGenOptions) Declaration public void Configure(SwaggerGenOptions options) Parameters Type Name Description SwaggerGenOptions options CreateInfoForApiVersion(ApiVersionDescription) This method creates a Swagger document for the given API version. Declaration static OpenApiInfo CreateInfoForApiVersion(ApiVersionDescription description) Parameters Type Name Description ApiVersionDescription description The swagger description to use for the operation. Returns Type Description OpenApiInfo An instance."
  },
  "api/CG.Blue.Swagger.SwaggerDefaultValues.html": {
    "href": "api/CG.Blue.Swagger.SwaggerDefaultValues.html",
    "title": "Class SwaggerDefaultValues",
    "keywords": "Class SwaggerDefaultValues This class is a default implementation of the interface. Inheritance System.Object SwaggerDefaultValues Namespace : CG.Blue.Swagger Assembly : CG.Blue.Controllers.dll Syntax class SwaggerDefaultValues : IOperationFilter Methods Apply(OpenApiOperation, OperationFilterContext) This method applies a filter to the specified operation using the given context. Declaration public void Apply(OpenApiOperation operation, OperationFilterContext context) Parameters Type Name Description OpenApiOperation operation The operation to apply the filter to. OperationFilterContext context The current operation filter context."
  },
  "api/CG.Blue.V1.Controllers.html": {
    "href": "api/CG.Blue.V1.Controllers.html",
    "title": "Namespace CG.Blue.V1.Controllers",
    "keywords": "Namespace CG.Blue.V1.Controllers Classes MimeTypesController This class is a REST controller for resources."
  },
  "api/CG.Blue.V1.Controllers.MimeTypesController.html": {
    "href": "api/CG.Blue.V1.Controllers.MimeTypesController.html",
    "title": "Class MimeTypesController",
    "keywords": "Class MimeTypesController This class is a REST controller for resources. Inheritance System.Object MimeTypesController Namespace : CG.Blue.V1.Controllers Assembly : CG.Blue.Controllers.dll Syntax public class MimeTypesController : ControllerBase Constructors MimeTypesController(IBlueApi, ILogger<MimeTypesController>) This constructor creates a new instance of the MimeTypesController Declaration public MimeTypesController(IBlueApi blueApi, ILogger<MimeTypesController> logger) Parameters Type Name Description IBlueApi blueApi The API to use with this controller. ILogger < MimeTypesController > logger The logger to use with this controller. Fields _blueApi This field contains the api for this controller. Declaration protected readonly IBlueApi _blueApi Field Value Type Description IBlueApi _logger This field contains the logger for this controller. Declaration protected readonly ILogger<MimeTypesController> _logger Field Value Type Description ILogger < MimeTypesController > Methods GetAsync() This method gets a collection of objects. Declaration public virtual async Task<IActionResult> GetAsync() Returns Type Description Task < IActionResult > A task to perform the operation that returns a collection of objects. GetAsync(String) This method gets a single object, by matching the type and subtype to the given key. Declaration public virtual async Task<IActionResult> GetAsync(string key) Parameters Type Name Description System.String key Returns Type Description Task < IActionResult > A task to perform the operation that returns a matching object, if a match was found, or NULL otherwise. GetByExtAsync(String) This method gets a collection of objects, by matching their file extension to the given value. Declaration public virtual async Task<IActionResult> GetByExtAsync(string extension) Parameters Type Name Description System.String extension Returns Type Description Task < IActionResult > A task to perform the operation that returns a collection of matching objects, if a match was found, or NULL otherwise."
  },
  "api/CG.Blue.V1.Models.html": {
    "href": "api/CG.Blue.V1.Models.html",
    "title": "Namespace CG.Blue.V1.Models",
    "keywords": "Namespace CG.Blue.V1.Models Classes MimeType"
  },
  "api/CG.Blue.V1.Models.MimeType.html": {
    "href": "api/CG.Blue.V1.Models.MimeType.html",
    "title": "Class MimeType",
    "keywords": "Class MimeType Inheritance System.Object MimeType Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blue.V1.Models Assembly : CG.Blue.Controllers.dll Syntax public class MimeType Properties Extensions This property contains a list of file extensions that are associated with the MIME type. Declaration public List<string> Extensions { get; set; } Property Value Type Description List < System.String > Key This property contains the key for the MIME type. Declaration public string Key { get; set; } Property Value Type Description System.String"
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes WebApplicationBuilderExtensions001 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationBuilderExtensions002 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationBuilderExtensions003 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationBuilderExtensions004 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationBuilderExtensions005 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationBuilderExtensions006 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationBuilderExtensions007 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationExtensions001 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. WebApplicationExtensions002 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. WebApplicationExtensions003 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions001.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions001.html",
    "title": "Class WebApplicationBuilderExtensions001",
    "keywords": "Class WebApplicationBuilderExtensions001 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions001 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Blue.dll Syntax public static class WebApplicationBuilderExtensions001 Methods AddBlueManagers(WebApplicationBuilder, String, Nullable<ILogger>) This method adds managers, directors, and related services, for the CG.Blue business logic layer. Declaration public static WebApplicationBuilder AddBlueManagers(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"BLL\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to BLL . System.Nullable < ILogger > bootstrapLogger The bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions002.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions002.html",
    "title": "Class WebApplicationBuilderExtensions002",
    "keywords": "Class WebApplicationBuilderExtensions002 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions002 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Blue.Controllers.dll Syntax public static class WebApplicationBuilderExtensions002 Methods AddBlueControllers(WebApplicationBuilder, String, Nullable<ILogger>) This method adds REST controllers for the CG.Blue service layer. Declaration public static WebApplicationBuilder AddBlueControllers(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"CTRL\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to CTRL . System.Nullable < ILogger > bootstrapLogger The bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions003.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions003.html",
    "title": "Class WebApplicationBuilderExtensions003",
    "keywords": "Class WebApplicationBuilderExtensions003 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions003 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Blue.Services.dll Syntax public static class WebApplicationBuilderExtensions003 Methods AddBlueServices(WebApplicationBuilder, String, Nullable<ILogger>) This method registers hosted services that are required for the CG.Blue service layer. Declaration public static WebApplicationBuilder AddBlueServices(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"SVC\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to SVC . System.Nullable < ILogger > bootstrapLogger The optional bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style"
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions004.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions004.html",
    "title": "Class WebApplicationBuilderExtensions004",
    "keywords": "Class WebApplicationBuilderExtensions004 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions004 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Blue.Data.dll Syntax public static class WebApplicationBuilderExtensions004 Methods AddBlueRepositories(WebApplicationBuilder, String, Nullable<ILogger>) This method adds repositories and related services, for the CG.Blue data-access layer. Declaration public static WebApplicationBuilder AddBlueRepositories(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"DAL\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to DAL . System.Nullable < ILogger > bootstrapLogger A bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions005.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions005.html",
    "title": "Class WebApplicationBuilderExtensions005",
    "keywords": "Class WebApplicationBuilderExtensions005 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions005 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Blue.Data.InMemory.dll Syntax public static class WebApplicationBuilderExtensions005 Methods AddInMemoryDataAccess(WebApplicationBuilder, String, Nullable<ILogger>) This method adds required services for this in-memory provider. Declaration public static WebApplicationBuilder AddInMemoryDataAccess(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"DAL:InMemory\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to DAL:InMemory . System.Nullable < ILogger > bootstrapLogger A bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style. Remarks This method must NOT have its signature changed! The method follows a convention used by the CG.EntityFrameworkCore package."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions006.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions006.html",
    "title": "Class WebApplicationBuilderExtensions006",
    "keywords": "Class WebApplicationBuilderExtensions006 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions006 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Blue.Data.Sqlite.dll Syntax public static class WebApplicationBuilderExtensions006 Methods AddSqliteDataAccess(WebApplicationBuilder, String, Nullable<ILogger>) This method adds required services for this SQLite provider. Declaration public static WebApplicationBuilder AddSqliteDataAccess(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"DAL:Sqlite\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to DAL:Sqlite . System.Nullable < ILogger > bootstrapLogger A bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style. Remarks This method must NOT have its signature changed! The method follows a convention used by the CG.EntityFrameworkCore package."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions007.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions007.html",
    "title": "Class WebApplicationBuilderExtensions007",
    "keywords": "Class WebApplicationBuilderExtensions007 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions007 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Blue.Data.SqlServer.dll Syntax public static class WebApplicationBuilderExtensions007 Methods AddSqlServerDataAccess(WebApplicationBuilder, String, Nullable<ILogger>) This method adds required services for this SQLServer provider. Declaration public static WebApplicationBuilder AddSqlServerDataAccess(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"DAL:SqlServer\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to DAL:SqlServer . System.Nullable < ILogger > bootstrapLogger A bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style. Remarks This method must NOT have its signature changed! The method follows a convention used by the CG.EntityFrameworkCore package."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions001.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions001.html",
    "title": "Class WebApplicationExtensions001",
    "keywords": "Class WebApplicationExtensions001 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. Inheritance System.Object WebApplicationExtensions001 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Blue.Data.InMemory.dll Syntax public static class WebApplicationExtensions001 Methods UseInMemoryDataAccess(WebApplication) This method performs startup operations for this in-memory provider. Declaration public static WebApplication UseInMemoryDataAccess(this WebApplication webApplication) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplication The value of the webApplication parameter, for chaining calls together, Fluent style. Remarks This method must NOT have its signature changed! The method follows a convention used by the CG.EntityFrameworkCore package."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions002.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions002.html",
    "title": "Class WebApplicationExtensions002",
    "keywords": "Class WebApplicationExtensions002 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. Inheritance System.Object WebApplicationExtensions002 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Blue.Data.Sqlite.dll Syntax public static class WebApplicationExtensions002 Methods DropAndRecreateDatabaseAsync(WebApplication, CancellationToken) This method drops and recreates the database. Declaration static async Task DropAndRecreateDatabaseAsync(this WebApplication webApplication, CancellationToken cancellationToken = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored throughout the lifetime of the method. Returns Type Description Task A task to perform the operation. MigrateDatabaseAsync(WebApplication, CancellationToken) This method migrates the database. project. Declaration static async Task MigrateDatabaseAsync(this WebApplication webApplication, CancellationToken cancellationToken = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the life of the operation. Returns Type Description Task A task to perform the operation. UseSqliteDataAccess(WebApplication) This method performs startup operations for this SQLite provider. Declaration public static WebApplication UseSqliteDataAccess(this WebApplication webApplication) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplication The value of the webApplication parameter, for chaining calls together, Fluent style. Remarks This method must NOT have its signature changed! The method follows a convention used by the CG.EntityFrameworkCore package."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions003.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions003.html",
    "title": "Class WebApplicationExtensions003",
    "keywords": "Class WebApplicationExtensions003 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. Inheritance System.Object WebApplicationExtensions003 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Blue.Data.SqlServer.dll Syntax public static class WebApplicationExtensions003 Methods DropAndRecreateDatabaseAsync(WebApplication, CancellationToken) This method drops and recreates the database. Declaration static async Task DropAndRecreateDatabaseAsync(this WebApplication webApplication, CancellationToken cancellationToken = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored throughout the lifetime of the method. Returns Type Description Task A task to perform the operation. MigrateDatabaseAsync(WebApplication, CancellationToken) This method migrates the database. project. Declaration static async Task MigrateDatabaseAsync(this WebApplication webApplication, CancellationToken cancellationToken = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the life of the operation. Returns Type Description Task A task to perform the operation. UseSqlServerDataAccess(WebApplication) This method performs startup operations for this SQLServer provider. Declaration public static WebApplication UseSqlServerDataAccess(this WebApplication webApplication) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplication The value of the webApplication parameter, for chaining calls together, Fluent style. Remarks This method must NOT have its signature changed! The method follows a convention used by the CG.EntityFrameworkCore package."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Purple is an idea for a self contained messaging microservice."
  }
}