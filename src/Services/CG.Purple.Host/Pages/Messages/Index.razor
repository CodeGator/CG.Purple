@page "/messages"

<PageTitle>Messages</PageTitle>

<MudBreadcrumbs Items="_crumbs"></MudBreadcrumbs>

<MudText Typo="Typo.h6" Class="py-4 px-5">This page contains the messages that have been sent to <b>Purple</b> for processing.</MudText>

<MudText Typo="Typo.body2" Class="px-5">Messages are retained for up to <font style=@($"color: {DefaultTheme.Instance().Palette.Secondary}")><b>@(HostedServiceOptions?.Value?.MessageProcessing?.MaxDaysToLive ?? 7)</b></font> days before they are automatically archived.</MudText>

<MudText Typo="Typo.body2" Class="pb-4 px-5">Messages are automatically retried up to <font style=@($"color: {DefaultTheme.Instance().Palette.Secondary}")><b>@(HostedServiceOptions?.Value?.MessageProcessing?.MaxErrorCount ?? 3)</b></font> times before they are left in an error state.</MudText>

<MudTabs>
    <MudTabPanel Text="Emails" Icon="@Icons.Material.Filled.Email">
        <MudTable T="MailMessage"
                  Items="@_mailMessages"
                  Dense
                  Striped
                  Virtualize
                  Loading="@_isBusy"
                  Filter="new Func<MailMessage,bool>(MailFilterFunc1)">
            <ToolBarContent>
                <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Refresh" OnClick="OnRefreshMailMessagesAsync">Refresh</MudButton>
                <MudText Class="px-4" Typo="Typo.caption">(page refreshes in @_timeTillNextUpdate)</MudText>
                <MudSpacer />
                <MudTextField @bind-Value="_mailGridSearchString"
                              Placeholder="Search"
                              HelperText="Optionally, search using 'property type:value' syntax, to match by a message property"
                              Adornment="Adornment.Start"
                              AdornmentIcon="@Icons.Material.Filled.Search"
                              IconSize="Size.Medium" Class="mt-0"></MudTextField>
            </ToolBarContent>
            <HeaderContent>
                <MudTh><MudTableSortLabel SortBy="new Func<MailMessage, object>(x=>x.IsDisabled)"></MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<MailMessage, object>(x=>x.CreatedOnUtc)">Created</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<MailMessage, object>(x=>x.To.Truncate(12))">To</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<MailMessage, object>(x=>x.MessageState)">State</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<MailMessage, object>(x=>x.ErrorCount)">Errors</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<MailMessage, object>(x=>x.SafeSubject())">Subject</MudTableSortLabel></MudTh>
                <MudTh>&nbsp;</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="">
                    @if (context.IsDisabled)
                    {
                        <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Block" />
                    }
                </MudTd>
                <MudTd DataLabel="Created">@context.CreatedOnUtc.ToLocalTime()</MudTd>
                <MudTd DataLabel="To">@context.To.Truncate(12)</MudTd>
                <MudTd DataLabel="State">@context.MessageState</MudTd>
                <MudTd DataLabel="Errors">@context.ErrorCount</MudTd>
                <MudTd DataLabel="Subject">@context.SafeSubject()</MudTd>
                <MudTh>
                    <MudTooltip Text="Enable/Disable">
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.FormatOverline" OnClick="() => OnToggleDisableAsync(context)" Disabled="@(context.MessageState == MessageState.Failed)" />
                    </MudTooltip>
                    <MudTooltip Text="Properties">
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.Settings" OnClick="() => OnPropertiesAsync(context)" />
                    </MudTooltip>
                    <MudTooltip Text="Logs">
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.History" OnClick="() => OnLogsAsync(context)" />
                    </MudTooltip>
                    <MudTooltip Text="View">
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.ViewCozy" OnClick="() => OnPreviewAsync(context)" />
                    </MudTooltip>
                    @if (context.Attachments.Any())
                    {
                        <MudTooltip Text="Attachments">
                            <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.AttachFile" OnClick="() => OnAttachmentsAsync(context)" />
                        </MudTooltip>
                    }                    
                </MudTh>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
            <NoRecordsContent>
                No emails were found.
            </NoRecordsContent>
            <LoadingContent>
                Loading emails ...
            </LoadingContent>
        </MudTable>
    </MudTabPanel>
    <MudTabPanel Text="Texts" Icon="@Icons.Material.Filled.Message">
        <MudTable Items="@_textMessages" Dense Striped Filter="new Func<TextMessage,bool>(TextFilterFunc1)" Loading="@_isBusy">
            <ToolBarContent>
                <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Refresh" OnClick="OnRefreshTextMessagesAsync">Refresh</MudButton>
                <MudText Class="px-4" Typo="Typo.caption">(page refreshes in @_timeTillNextUpdate)</MudText>
                <MudSpacer />
                <MudTextField @bind-Value="_textGridSearchString"
                              Placeholder="Search"
                              HelperText="Optionally, search using 'property:value' syntax, to match by a message property"
                              Adornment="Adornment.Start"
                              AdornmentIcon="@Icons.Material.Filled.Search"
                              IconSize="Size.Medium"
                              Class="mt-0"></MudTextField>
            </ToolBarContent>
            <HeaderContent>
                <MudTh><MudTableSortLabel SortBy="new Func<TextMessage, object>(x=>x.IsDisabled)"></MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<TextMessage, object>(x=>x.CreatedOnUtc)">Created</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<TextMessage, object>(x=>x.To.Truncate(12))">To</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<TextMessage, object>(x=>x.MessageState)">State</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<TextMessage, object>(x=>x.ErrorCount)">Errors</MudTableSortLabel></MudTh>
                <MudTh>&nbsp;</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="">
                    @if (context.IsDisabled)
                    {
                        <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Block" />
                    }
                </MudTd>
                <MudTd DataLabel="Created">@context.CreatedOnUtc.ToLocalTime()</MudTd>
                <MudTd DataLabel="To">@context.To.Truncate(12)</MudTd>
                <MudTd DataLabel="State">@context.MessageState</MudTd>
                <MudTd DataLabel="Errors">@context.ErrorCount</MudTd>
                <MudTh>
                    <MudTooltip Text="Enable/Disable">
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.FormatOverline" OnClick="() => OnToggleDisableAsync(context)" />
                    </MudTooltip>
                    <MudTooltip Text="Properties">
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.Settings" OnClick="() => OnPropertiesAsync(context)" Disabled="_isBusy" />
                    </MudTooltip>
                    <MudTooltip Text="Logs">
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.History" OnClick="() => OnLogsAsync(context)" />
                    </MudTooltip>
                    <MudTooltip Text="View">
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.ViewCozy" OnClick="() => OnPreviewAsync(context)" />
                    </MudTooltip>
                    @if (context.Attachments.Any())
                    {
                        <MudTooltip Text="Attachments">
                            <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.AttachFile" OnClick="() => OnAttachmentsAsync(context)" />
                        </MudTooltip>
                    }                   
                </MudTh>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
            <NoRecordsContent>
                No texts were found.
            </NoRecordsContent>
            <LoadingContent>
                Loading texts ...
            </LoadingContent>
        </MudTable>
    </MudTabPanel>
</MudTabs>
